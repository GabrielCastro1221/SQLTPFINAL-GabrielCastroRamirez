USE SKATE_SHOP_CODER;

CREATE PROCEDURE IF NOT EXISTS CREAR_TIPO_PAGO(IN PAG VARCHAR(50))
    BEGIN
        INSERT INTO TIPO_PAGO (TIPO_PAGO) VALUES (PAG);
        SELECT "METODO DE PAGO AGREGADO EXITOSAMENTE";
    END;

CREATE PROCEDURE IF NOT EXISTS OBTENER_TIPO_PAGO()
    BEGIN
        SELECT * FROM TIPO_PAGO;
    END;

CREATE PROCEDURE IF NOT EXISTS ACTUALIZAR_TIPO_PAGO ( IN ID INT, PAG VARCHAR(50))
    BEGIN
        UPDATE TIPO_PAGO SET TIPO_PAGO = PAG
        WHERE ID_PAGO = ID;
        SELECT "METODO DE PAGO ACTUALIZADO EXITOSAMENTE";
    END;

CREATE PROCEDURE IF NOT EXISTS BORRAR_TIPO_PAGO (IN ID INT)
    BEGIN
        DELETE FROM TIPO_PAGO
        WHERE ID_PAGO = ID;
        SELECT "METODO DE PAGO BORRADO EXITOSAMENTE";
    END;

CREATE PROCEDURE IF NOT EXISTS CREAR_TIPO_CLIENTE(IN CLI VARCHAR(100))
    BEGIN
        INSERT INTO TIPO_CLIENTE (TIPO) VALUES (CLI);
        SELECT "TIPO DE CLIENTE AGREGADO EXITOSAMENTE";
    END;

CREATE PROCEDURE IF NOT EXISTS OBTENER_TIPO_CLIENTE()
    BEGIN
        SELECT * FROM TIPO_CLIENTE;
    END;

CREATE PROCEDURE IF NOT EXISTS ACTUALIZAR_TIPO_CLIENTE ( IN ID INT, CLI VARCHAR(100))
    BEGIN
        UPDATE TIPO_CLIENTE SET TIPO = CLI
        WHERE ID_TIPO = ID;
        SELECT "TIPO DE CLIENTE ACTUALIZADO EXITOSAMENTE";
    END;

CREATE PROCEDURE IF NOT EXISTS BORRAR_TIPO_CLIENTE (IN ID INT)
    BEGIN
        DELETE FROM TIPO_CLIENTE
        WHERE ID_TIPO = ID;
        SELECT "TIPO DE CLIENTE ELIMINADO EXITOSAMENTE";
    END;